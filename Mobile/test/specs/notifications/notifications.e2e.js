const { browser } = require('@wdio/globals')
const commands = require('../../../commands.js')
const loginData = require('../../fixtures/login-data.json')
const notificationsData = require('../../fixtures/notifications-data.json')
const loginUtils = require('../../utils/login.js')
const TimelinePagePo = require('../../page-objects/TimelinePagePo.js')
const postingTweetUtils = require('../../utils/posting-tweets.js')
const NotificationsPo = require('../../page-objects/NotificationsPo.js')
const postingTweetsPo = require('../../page-objects/PostingTweetsPo.js')
const searchPo = require('../../page-objects/search.js')
const searchUtils = require('../../utils/search.js')
const notificationsUtils = require('../../utils/notifications.js')

describe('Notifications test suite', () => {
    before('login', async () => {
        await loginUtils.login(loginData.validEmail, loginData.validPassword)
        await browser.pause(5000)
    })

    afterEach('restart and return to home', async () => {
        await commands.restartApp()
        const home = await TimelinePagePo.home()
        await home.click()
        await browser.pause(5000)
    })

    it('receives like', async () => {        
        await loginUtils.logout()
        await loginUtils.login(notificationsData.engemail, notificationsData.engpassword)
        await browser.pause(5000)
        const searchTab = await searchPo.searchTab()
        await searchTab.click()
        const searchBar = await searchPo.searchBar()
        await searchBar.click()
        await searchUtils.searchFor(notificationsData.search)
        const firstUser = await searchPo.firstUser()
        await firstUser.click()
        await notificationsUtils.likeUnlikeFirstTweet()
        await loginUtils.logout()
        await loginUtils.login(loginData.validEmail, loginData.validPassword)
        await browser.pause(5000)
        const notificationsButton = await NotificationsPo.notificationsButton()
        await notificationsButton.click()
        await browser.pause(5000)
    })

    it('receives retweet', async () => {
        await loginUtils.logout()
        await loginUtils.login(notificationsData.engemail, notificationsData.engpassword)
        await browser.pause(5000)
        const searchTab = await searchPo.searchTab()
        await searchTab.click()
        const searchBar = await searchPo.searchBar()
        await searchBar.click()
        await searchUtils.searchFor(notificationsData.search)
        const firstUser = await searchPo.firstUser()
        await firstUser.click()
        await notificationsUtils.retweetUnretweetFirstTweet()
        await loginUtils.logout()
        await loginUtils.login(loginData.validEmail, loginData.validPassword)
        await browser.pause(5000)
        const notificationsButton = await NotificationsPo.notificationsButton()
        await notificationsButton.click()
        await browser.pause(5000)
    })
})